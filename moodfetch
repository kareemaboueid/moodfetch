#!/usr/bin/env bash
# vim: noai:ts=4:sw=4:expandtab
# shellcheck source=/dev/null
# shellcheck disable=2009

# helper: read battery percentage and charging status if available
get_battery_status() {
  # many Linux distros expose this under /sys/class/power_supply
  local bat_path="/sys/class/power_supply/BAT0"
  if [ -d "$bat_path" ]; then
    local capacity=$(cat "$bat_path/capacity" 2>/dev/null)
    local status=$(cat "$bat_path/status" 2>/dev/null)
    echo "$capacity $status"
  else
    echo "" # no battery info available
  fi
}

# helper: read cpu load per core (1-minute average normalized)
get_cpu_load() {
  local loadavg=$(awk '{print $1}' /proc/loadavg)
  local cores=$(nproc 2>/dev/null || echo 1)
  awk -v l="$loadavg" -v c="$cores" 'BEGIN { printf("%.2f", l/c) }'
}

# helper: read memory usage percentage
get_ram_usage() {
  local mem_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')
  local mem_available=$(grep MemAvailable /proc/meminfo | awk '{print $2}')
  if [ -n "$mem_total" ] && [ -n "$mem_available" ]; then
    awk -v t="$mem_total" -v a="$mem_available" 'BEGIN { printf("%.1f", (1 - (a/t)) * 100) }'
  else
    echo "0"
  fi
}

# --- MAIN ---
main() {
  # print ascii logo
  cat "./logo/ascii-art.txt"
  echo ""
  echo -e "\e[1mMood\e[0m"
  echo ""

  # check battery first
  battery_info=$(get_battery_status)

  if [ -n "$battery_info" ]; then
    battery_percentage=$(echo "$battery_info" | awk '{print $1}')
    battery_state=$(echo "$battery_info" | awk '{print $2}')

    if [ "$battery_state" = "Charging" ]; then
      mood="Ah, finally plugged in. Feels like sipping espresso shots of electricity."
    elif [ "$battery_percentage" -le 15 ]; then
      mood="Running at ${battery_percentage}% — basically living on borrowed electrons."
    elif [ "$battery_percentage" -le 40 ]; then
      mood="Battery ${battery_percentage}% — alive but a bit hangry."
    else
      mood="Battery ${battery_percentage}% and holding steady. I can breathe easy."
    fi

  else
    # if no battery, look at CPU pressure
    cpu_load=$(get_cpu_load)

    if (( $(echo "$cpu_load < 0.5" | bc -l) )); then
      mood="CPU load per core is ${cpu_load} — I'm lounging in digital hammocks."
    elif (( $(echo "$cpu_load < 1.0" | bc -l) )); then
      mood="CPU load ${cpu_load} — I'm working, but not filing complaints (yet)."
    elif (( $(echo "$cpu_load < 2.0" | bc -l) )); then
      # new middle ground added for nuance
      mood="CPU load ${cpu_load} — I'm panting, but still alive."
    else
      mood="CPU load ${cpu_load} — everything feels like a DDoS, and you're the attacker."
    fi

    # and if CPU load looks fine, check RAM usage
    if [ -z "$mood" ] || [[ "$mood" =~ "hammocks" || "$mood" =~ "complaints" ]]; then
      ram_usage=$(get_ram_usage)

      if (( $(echo "$ram_usage < 50" | bc -l) )); then
        mood="RAM usage ${ram_usage}% — brain spacious and calm."
      elif (( $(echo "$ram_usage < 80" | bc -l) )); then
        mood="RAM usage ${ram_usage}% — brain cluttered with tabs, but surviving."
      else
        mood="RAM usage ${ram_usage}% — memory jam, paging out dreams."
      fi
    fi
  fi

  # print the chosen mood
  echo "$mood"
  echo ""
}
# ------

# Entry point
main "$@"
