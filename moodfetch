#!/usr/bin/env bash
# vim: noai:ts=4:sw=4:expandtab
# shellcheck source=/dev/null
# shellcheck disable=2009

# Resolve script directory:
# - If installed via `make install`, prefer /usr/local/share/moodfetch
# - Otherwise, fall back to local repo path
if [ -d "/usr/local/share/moodfetch" ]; then
  script_dir="/usr/local/share/moodfetch"
else
  script_dir="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
fi

# Source our modules (quietly). Each module guards its own functions.
# These files are part of the project and expected to exist side-by-side.
# If any is missing, we bail with a friendly message.
for f in "utils.sh" "templates.sh" "metrics.sh" "mood_engine.sh" "config.sh" "logging.sh" "themes.sh" "version.sh"; do
  if [ ! -f "${script_dir}/${f}" ]; then
    echo "Missing dependency: ${f}. Please reinstall Moodfetch." >&2
    exit 1
  fi
  # shellcheck disable=SC1090
  . "${script_dir}/${f}"
done

# Initialize configuration system
init_config

# --- Parse flags (simple getopt-style) ---
# CLI flags override config file settings
show_ascii="$(get_config CONFIG_SHOW_ASCII true)"
compact_ascii="$(get_config CONFIG_COMPACT_ASCII false)"
verbose="$(get_config CONFIG_VERBOSE false)"
strip_metrics_placeholders="$(get_config CONFIG_HIDE_METRICS true)"   # default: hide numbers inside mood text

# detect non-TTY → auto-disable colors
if [ ! -t 1 ]; then
  no_color=true
else
  no_color=false
fi

for arg in "$@"; do
  case "$arg" in
    --no-ascii)
      show_ascii=false
      shift
      ;;
    --compact-ascii)
      compact_ascii=true
      shift
      ;;
    --verbose)
      verbose=true
      strip_metrics_placeholders=false   # if user asks for verbose, keep numbers in mood text
      shift
      ;;
  --version)
      print_version
      exit 0
      ;;
    --check-update)
      check_for_updates
      exit 0
      exit 0
      ;;
    --debug)
      enable_debug
      shift
      ;;
    --help|-h)
      echo "Usage: moodfetch [options]"
      echo ""
      echo "Options:"
      echo "  --no-ascii        Skip ASCII logo"
      echo "  --compact-ascii   Show smaller ASCII logo instead of full one"
      echo "  --verbose         Show metrics summary and keep numbers in mood text"
      echo "  --debug           Enable debug logging"
      echo "  --version         Show version and exit"
      echo "  --help, -h        Show this help and exit"
      echo ""
      echo "Tip: You can run 'bash -n *.sh' inside the repo to validate syntax quickly."
      exit 0
      ;;
  esac
done

# --- MAIN ---
main() {
  # print ascii logo if available
  if $show_ascii; then
    if $compact_ascii && [ -f "${script_dir}/ascii-art-mini.txt" ]; then
      cat "${script_dir}/ascii-art-mini.txt"
    elif [ -f "${script_dir}/ascii-art.txt" ]; then
      cat "${script_dir}/ascii-art.txt"
    fi
  fi
  echo ""
  # Bold "Mood" header; if no ANSI, the raw text is still fine
  if $no_color; then
    echo "Mood"
  else
    echo -e "\e[1mMood\e[0m"
  fi
  echo ""

  # 1) Collect system metrics (best-effort & portable)
  collect_all_metrics

  # 2) Ask the engine to pick the most relevant mood.
  local final_mood
  final_mood="$(mood_engine_pick)"

  # 3) Print the chosen mood text
  echo "${final_mood}"
  echo ""

  # 4) If verbose, dump quick metrics summary (safe values only)
  if $verbose; then
    echo "---- metrics ----"
    echo "CPU: ${cpu_util_pct:-N/A}%  Temp: ${cpu_temp:-N/A}°C"
    echo "RAM: ${ram_pct:-N/A}%  SWAP: ${swap_pct:-N/A}%"
    echo "Disk: ${disk_pct:-N/A}%  IOwait: ${iowait_pct:-N/A}%"
    echo "Battery: ${battery_pct:-N/A}%"
    echo "Uptime: ${uptime_h:-N/A}h"
    echo "Wi-Fi: ${wifi_signal:-N/A}% on ${iface:-N/A}"
    echo "Volume: ${volume_pct:-N/A}%"
    echo "Profile: ${profile:-N/A}"
  fi
}

# ------
# Entry point
main "$@"
