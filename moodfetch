#!/usr/bin/env bash
# vim: noai:ts=4:sw=4:expandtab
# shellcheck source=/dev/null
# shellcheck disable=2009

# Resolve script directory:
# - If installed via `make install`, prefer /usr/local/share/moodfetch
# - Otherwise, fall back to local repo path
if [ -d "/usr/local/share/moodfetch" ]; then
  script_dir="/usr/local/share/moodfetch"
else
  script_dir="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
fi

# Source our modules (quietly). Each module guards its own functions.
# These files are part of the project and expected to exist side-by-side.
# If any is missing, we bail with a friendly message.
for f in "utils.sh" "templates.sh" "metrics.sh" "mood_engine.sh"; do
  if [ ! -f "${script_dir}/${f}" ]; then
    echo "Missing dependency: ${f}. Please reinstall Moodfetch." >&2
    exit 1
  fi
  # shellcheck disable=SC1090
  . "${script_dir}/${f}"
done

# --- Parse flags (simple getopt-style) ---
show_ascii=true
metrics=false
# I know this is gonna be probably be either painful or stupid!!!
strip_metrics_placeholders=true   # default: hide numbers inside mood text (nerd overload not fun sometimes)

for arg in "$@"; do
  case "$arg" in
    --no-ascii)
      show_ascii=false
      shift
      ;;
    --metrics)
      metrics=true
      strip_metrics_placeholders=false   # if user asks for metrics, keep numbers in mood text (don’t strip)
      shift
      ;;
    --version)
      echo "Moodfetch version 0.2.7"
      exit 0
      ;;
    --help|-h)
      echo "Usage: moodfetch [--no-ascii] [--metrics] [--version] [--help]"
      echo ""
      echo "Options:"
      echo "  --no-ascii    Skip ASCII logo"
      echo "  --metrics     Show metrics summary and keep numbers in mood text"
      echo "  --version     Show version and exit"
      echo "  --help, -h    Show this help and exit"
      exit 0
      ;;
  esac
done

# --- MAIN ---
main() {
  # we keep it simple & friendly: clear, show logo (unless disabled), then the mood
  clear

  # print ascii logo if available; otherwise, no drama—just skip it
  if $show_ascii && [ -f "${script_dir}/ascii-art.txt" ]; then
    cat "${script_dir}/ascii-art.txt"
  fi
  echo ""
  # Bold "Mood" header; if no ANSI, the raw text is still fine
  echo -e "\e[1mMood\e[0m"
  echo ""

  # 1) Collect system metrics (best-effort & portable)
  collect_all_metrics

  # 2) Ask the engine to pick the most relevant mood.
  local final_mood
  final_mood="$(mood_engine_pick)"

  # 3) Print the chosen mood text
  echo "${final_mood}"
  echo ""

  # 4) If metrics, dump quick metrics summary (safe values only)
  if $metrics; then
    echo "---- metrics ----"
    echo "CPU: ${cpu_util_pct:-?}%  Temp: ${cpu_temp:-?}°C"
    echo "RAM: ${ram_pct:-?}%  SWAP: ${swap_pct:-?}%"
    echo "Disk: ${disk_pct:-?}%  IOwait: ${iowait_pct:-?}%"
    echo "Battery: ${battery_pct:-?}%"
    echo "Uptime: ${uptime_h:-?}h"
    echo "Wi-Fi: ${wifi_signal:-?}% on ${iface:-?}"
    echo "Volume: ${volume_pct:-?}%"
    echo "Profile: ${profile:-?}"
  fi
}

# ------
# Entry point
main "$@"
